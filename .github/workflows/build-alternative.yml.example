# Alternative simpler approach - let Tauri handle icon generation
# To use this instead, rename to build.yml and replace the existing one

name: Build and Release (Simplified)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.0)'
        required: false
        type: string

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.id }}
      release_upload_url: ${{ steps.create-release.outputs.upload_url }}
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version
        id: get-version
        run: |
          if [ "${{ github.event.inputs.version }}" != "" ]; then
            VERSION="${{ github.event.inputs.version }}"
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION="v0.1.0-dev"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Create release
        id: create-release
        if: github.event_name == 'push' || github.event.inputs.version != ''
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get-version.outputs.version }}
          release_name: GTD Space ${{ steps.get-version.outputs.version }}
          draft: true
          prerelease: false

  build-tauri:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            rust-targets: 'aarch64-apple-darwin'
            args: '--target aarch64-apple-darwin'
            artifact-name: 'macos-aarch64'
          
          - platform: 'macos-latest'
            rust-targets: 'x86_64-apple-darwin'
            args: '--target x86_64-apple-darwin'
            artifact-name: 'macos-x64'
          
          - platform: 'ubuntu-22.04'
            rust-targets: 'x86_64-unknown-linux-gnu'
            args: ''
            artifact-name: 'linux-x64'
          
          - platform: 'windows-latest'
            rust-targets: 'x86_64-pc-windows-msvc'
            args: ''
            artifact-name: 'windows-x64'

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust-targets }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install frontend dependencies
        run: npm ci

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.args }}
          # Let Tauri handle icon generation from icon.png
          iconPath: './src-tauri/icons/icon.png'

      # Rest of the workflow remains the same...