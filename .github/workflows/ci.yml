name: CI

on:
  push:
    branches:
      - main
      - develop
      - staging
  pull_request:
    branches:
      - main
      - develop
      - staging

# Set minimal permissions for the workflow
permissions:
  contents: read

# Cancel in-progress runs when a new run is triggered on the same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-typecheck:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type checking
        run: npm run type-check

      - name: Run ESLint
        run: npm run lint

  test-build:
    needs: [lint-and-typecheck]
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30
    strategy:
      fail-fast: true
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          # Try newer webkit package first, fallback to older if not available
          if ! sudo apt-get install -y libwebkit2gtk-4.1-dev; then
            echo "libwebkit2gtk-4.1-dev not available, falling back to libwebkit2gtk-4.0-dev"
            sudo apt-get install -y libwebkit2gtk-4.0-dev
          fi
          # Install other dependencies
          sudo apt-get install -y \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri'

      - name: Install frontend dependencies
        run: npm ci

      - name: Generate Icons
        run: npm run icons:generate

      - name: Build frontend
        run: npm run build

      - name: Check Rust formatting
        run: |
          cd src-tauri
          cargo fmt -- --check

      - name: Run Rust checks
        run: |
          cd src-tauri
          cargo check

      - name: Run Rust clippy
        run: |
          cd src-tauri
          cargo clippy -- -D warnings
